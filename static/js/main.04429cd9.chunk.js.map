{"version":3,"sources":["actions/usersActions.js","resources/profile-pics/profile1.jpg","resources/profile-pics/profile2.jpeg","resources/profile-pics/profile3.jpeg","resources/profile-pics/profile4.jpeg","resources/profile-pics/profile5.jpeg","resources/profile-pics/profile6.jpeg","tools/userProfileImages.js","resources/profile-pics/profile7.jpeg","resources/profile-pics/profile8.jpeg","resources/profile-pics/profile9.jpeg","resources/profile-pics/profile10.jpeg","resources/profile-pics/profile11.jpeg","components/User.js","pages/UsersPage.js","actions/postsActions.js","actions/userActions.js","resources/cover1.webp","resources/cover2.png","resources/cover3.jpg","resources/cover4.jpg","resources/writer2.png","tools/userCovers.js","resources/cover5.jpg","components/Post.js","pages/PostsPage.js","components/Comment.js","actions/postActions.js","actions/commentsActions.js","pages/PostPage.js","components/header/Header.js","App.js","reducers/postsReducer.js","reducers/postReducer.js","reducers/commentsReducer.js","reducers/usersReducer.js","reducers/userReducer.js","reducers/index.js","index.js"],"names":["GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsersSuccess","users","type","payload","profilePics","profile1","profile2","profile3","profile4","profile5","profile6","profilePicsNumber","length","User","user","index","profilePicture","Card","className","Img","variant","src","Body","Title","name","username","Text","website","email","address","city","UsersPage","dispatch","useDispatch","useEffect","a","fetch","response","json","useSelector","loading","hasErrors","Container","Row","map","Col","xs","sm","lg","xl","to","id","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","getUserSuccess","coverPictures","cover1","cover2","cover3","cover4","cover7","coverPicturesNumber","Post","post","fullPage","varient","coverPicture","bg","text","title","toUpperCase","body","substring","concat","PostsPage","match","userId","params","data","console","log","fetchUser","posts","fluid","Comment","comment","toLowerCase","Header","GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","getPostSuccess","GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","getCommentsSuccess","comments","PostPage","postId","fetchComments","count","renderPost","renderComments","Navbar","fixed","Brand","Nav","as","App","exact","path","component","initialState","undefined","rootReducer","combineReducers","state","action","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.04429cd9.chunk.js","sourcesContent":["// Define Redux action types\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getUsers = () => ({\r\n  type: GET_USERS,\r\n});\r\n\r\nexport const getUsersSuccess = users => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nexport const getUsersfailure = () => ({\r\n  type: GET_USERS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchUsers() {\r\n  return async dispatch => {\r\n    dispatch(getUsers());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      const users = await response.json();\r\n      dispatch(getUsersSuccess(users));\r\n    } catch (error) {\r\n      dispatch(getUsersfailure());\r\n    }\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/profile1.282b1adb.jpg\";","export default __webpack_public_path__ + \"static/media/profile2.0cc52bbd.jpeg\";","export default __webpack_public_path__ + \"static/media/profile3.5faee1aa.jpeg\";","export default __webpack_public_path__ + \"static/media/profile4.4fe4fb19.jpeg\";","export default __webpack_public_path__ + \"static/media/profile5.453c4718.jpeg\";","export default __webpack_public_path__ + \"static/media/profile6.f630c76e.jpeg\";","import profile1 from \"resources/profile-pics/profile1.jpg\";\r\nimport profile2 from \"resources/profile-pics/profile2.jpeg\";\r\nimport profile3 from \"resources/profile-pics/profile3.jpeg\";\r\nimport profile4 from \"resources/profile-pics/profile4.jpeg\";\r\nimport profile5 from \"resources/profile-pics/profile5.jpeg\";\r\nimport profile6 from \"resources/profile-pics/profile6.jpeg\";\r\nimport profile7 from \"resources/profile-pics/profile7.jpeg\";\r\nimport profile8 from \"resources/profile-pics/profile8.jpeg\";\r\nimport profile9 from \"resources/profile-pics/profile9.jpeg\";\r\nimport profile10 from \"resources/profile-pics/profile10.jpeg\";\r\nimport profile11 from \"resources/profile-pics/profile11.jpeg\";\r\n\r\nconst profilePics = [\r\n  profile1,\r\n  profile2,\r\n  profile3,\r\n  profile4,\r\n  profile5,\r\n  profile6,\r\n  profile6,\r\n  profile7,\r\n  profile8,\r\n  profile9,\r\n  profile10,\r\n  profile11,\r\n];\r\n\r\nexport default profilePics;\r\n\r\nexport const profilePicsNumber = profilePics.length;\r\n","export default __webpack_public_path__ + \"static/media/profile7.fbc3e530.jpeg\";","export default __webpack_public_path__ + \"static/media/profile8.4f9e4a3e.jpeg\";","export default __webpack_public_path__ + \"static/media/profile9.a7eb2d89.jpeg\";","export default __webpack_public_path__ + \"static/media/profile10.7add4d9d.jpeg\";","export default __webpack_public_path__ + \"static/media/profile11.9e06ddf0.jpeg\";","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport profilePics, { profilePicsNumber } from \"tools/userProfileImages\";\r\n\r\nconst User = ({ user, index }) => {\r\n  const profilePicture = profilePics[index % profilePicsNumber];\r\n\r\n  return (\r\n    <Card className=\"user-card rounded-3 shadow p-2\">\r\n      <div className=\"d-flex justify-content-center align-items-center position-relative mb-5\">\r\n        <div className=\"profile-image-wrapper p-2 rounded-circle position-absolute top-100 start-50 translate-middle shadow-lg bg-white d-flex justify-content-center align-items-center\">\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={profilePicture}\r\n            className=\"rounded-circle profile-image shadow-lg\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <Card.Body className=\"text-white text-center\">\r\n        <Card.Title className=\"\">\r\n          {user.name} | {user.username}\r\n        </Card.Title>\r\n        <Card.Text>Website: {user.website}</Card.Text>\r\n        <Card.Text>Email: {user.email}</Card.Text>\r\n        <Card.Text>City: {user.address.city}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport { fetchUsers } from \"../actions/usersActions\";\r\nimport User from \"../components/User\";\r\n\r\nconst UsersPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const { users, loading, hasErrors } = useSelector(({ users }) => ({\r\n    users: users.users,\r\n    loading: users.loading,\r\n    hasErrors: users.hasErrors,\r\n  }));\r\n\r\n  const renderUsers = () => {\r\n    if (loading) return <p>Loading users...</p>;\r\n    if (hasErrors) return <p>Unable to display users.</p>;\r\n\r\n    return (\r\n      users &&\r\n      users.map((user, index) => {\r\n        return (\r\n          <Col xs={12} sm={6} lg={4} xl={3} className=\"mb-2\" key={user.id}>\r\n            <Link to={`/bloggers/${user.id}/posts`}>\r\n              <User user={user} index={index} />\r\n            </Link>\r\n          </Col>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mb-2\">{renderUsers()}</Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","// Define Redux action types\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\r\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nexport const getPostsSuccess = posts => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const getPostsfailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchPosts(userId) {\r\n  return async dispatch => {\r\n    dispatch(getPosts());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts?userId=\" + userId\r\n      );\r\n      const data = await response.json();\r\n      dispatch(getPostsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getPostsfailure());\r\n    }\r\n  };\r\n}\r\n","// Define Redux action types\r\nexport const GET_USER = \"GET_USERS\";\r\nexport const GET_USER_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USER_FAILURE = \"GET_USERS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getUser = () => ({\r\n  type: GET_USER,\r\n});\r\n\r\nexport const getUserSuccess = user => ({\r\n  type: GET_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const getUserfailure = () => ({\r\n  type: GET_USER_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchUser(userId) {\r\n  console.log(userId)\r\n  return async dispatch => {\r\n    dispatch(getUser());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users?id=\" + userId\r\n      );\r\n      const user = await response.json();\r\n      dispatch(getUserSuccess(user[0]));\r\n    } catch (error) {\r\n      dispatch(getUserfailure());\r\n    }\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cover1.ff3c9b79.webp\";","export default __webpack_public_path__ + \"static/media/cover2.21658be9.png\";","export default __webpack_public_path__ + \"static/media/cover3.f61ec2eb.jpg\";","export default __webpack_public_path__ + \"static/media/cover4.eb777506.jpg\";","export default __webpack_public_path__ + \"static/media/writer2.834bad45.png\";","import cover1 from \"resources/cover1.webp\";\r\nimport cover2 from \"resources/cover2.png\";\r\n\r\nimport cover3 from \"resources/cover3.jpg\";\r\n\r\nimport cover4 from \"resources/cover4.jpg\";\r\nimport cover7 from \"resources/writer2.png\";\r\n\r\nimport cover5 from \"resources/cover5.jpg\";\r\n\r\nconst coverPictures = [cover1, cover2, cover3, cover4, cover5, cover7];\r\n\r\nexport default coverPictures;\r\n\r\nexport const coverPicturesNumber = coverPictures.length;\r\n","export default __webpack_public_path__ + \"static/media/cover5.55ec56d9.jpg\";","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport coverPictures, { coverPicturesNumber } from \"tools/userCovers\";\r\nexport const Post = ({ post, fullPage, varient, index }) => {\r\n  const coverPicture = coverPictures[index % coverPicturesNumber];\r\n\r\n  return (\r\n    <article className={fullPage ? \"post-container\" : \"post-excerpt\"}>\r\n      <Card bg=\"secondary\" text=\"white\" className=\"mb-3\" varient={varient}>\r\n        <Card.Img variant=\"top\" src={coverPicture} className=\"shadow-lg m-2\" />\r\n        <Card.Body>\r\n          <Card.Title>{post.title.toUpperCase()}</Card.Title>\r\n          <Card.Text>\r\n            {fullPage ? post.body : post.body.substring(0, 100).concat(\"...\")}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </article>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport { fetchPosts } from \"../actions/postsActions\";\r\nimport { fetchUser } from \"actions/userActions\";\r\nimport { Post } from \"../components/Post\";\r\nimport User from \"../components/User\";\r\n\r\nconst PostsPage = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n\r\n    dispatch(fetchPosts(id));\r\n    dispatch(fetchUser(id));\r\n  }, [dispatch, match.params]);\r\n\r\n  const { user, posts, loading, hasErrors } = useSelector(\r\n    ({ user, posts }) => ({\r\n      user: user.user,\r\n      posts: posts.posts,\r\n      loading: { posts: posts.loading, user: user.loading },\r\n      hasErrors: { posts: posts.hasErrors, user: user.hasErrors },\r\n    })\r\n  );\r\n\r\n  // Show loading, error, or success state\r\n  const renderPosts = () => {\r\n    if (loading.posts) return <p>Loading posts...</p>;\r\n    if (hasErrors.posts) return <p>Unable to display posts.</p>;\r\n    return (\r\n      posts &&\r\n      posts.map((post, index) => {\r\n        return (\r\n          <Col xs={12} sm={6} lg={4} key={post.id}>\r\n            <Link to={`/posts/${post.id}`}>\r\n              <Post\r\n                post={post}\r\n                fullPage={false}\r\n                index={index}\r\n                varient=\"secondary\"\r\n              />\r\n            </Link>\r\n          </Col>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderUser = () => {\r\n    if (loading.user) return <p>Loading user...</p>;\r\n    if (hasErrors.user) return <p>Unable to display posts.</p>;\r\n\r\n    return user && <User user={user} index={match.params.id} />;\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"md\" className=\"text-white\">\r\n      <h1>Posts by {}</h1>\r\n      <Row>\r\n        <Col xs={12} lg={3} xl={4} className=\"mb-5\">\r\n          {renderUser()}\r\n        </Col>\r\n        <Col xs={12} lg={9} xl={8}>\r\n          <Row>{renderPosts()}</Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport const Comment = ({ comment }) => (\r\n  <aside className=\"comment-wrapper p-2 ms-5 mb-2 bg-secondary rounded-3\">\r\n    <Card\r\n      bg={\"dark\".toLowerCase()}\r\n      text={\"dark\".toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n    >\r\n      <Card.Header>\r\n        <h2>{comment.name.toUpperCase()}</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{comment.email}</Card.Title>\r\n        <Card.Text>{comment.body}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  </aside>\r\n);\r\n","// Define Redux action types\r\nexport const GET_POST = \"GET_POST\";\r\nexport const GET_POST_SUCCESS = \"GET_POST_SUCCESS\";\r\nexport const GET_POST_FAILURE = \"GET_POST_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getPost = () => ({\r\n  type: GET_POST,\r\n});\r\n\r\nexport const getPostSuccess = post => ({\r\n  type: GET_POST_SUCCESS,\r\n  payload: post,\r\n});\r\n\r\nexport const getPostfailure = () => ({\r\n  type: GET_POST_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchPost(postId) {\r\n  return async dispatch => {\r\n    dispatch(getPost());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts/\" + postId\r\n      );\r\n      const post = await response.json();\r\n\r\n      dispatch(getPostSuccess(post));\r\n    } catch (error) {\r\n      dispatch(getPostfailure());\r\n    }\r\n  };\r\n}\r\n","// Define Redux action types\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const GET_COMMENTS_SUCCESS = \"GET_COMMENTS_SUCCESS\";\r\nexport const GET_COMMENTS_FAILURE = \"GET_COMMENTS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getComments = () => ({\r\n  type: GET_COMMENTS,\r\n});\r\n\r\nexport const getCommentsSuccess = comments => ({\r\n  type: GET_COMMENTS_SUCCESS,\r\n  payload: comments,\r\n});\r\n\r\nexport const getCommentsFailure = () => ({\r\n  type: GET_COMMENTS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchComments(postId) {\r\n  return async dispatch => {\r\n    dispatch(getComments());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments?postId=\" + postId\r\n      );\r\n      const comments = await response.json();\r\n\r\n      dispatch(getCommentsSuccess(comments));\r\n    } catch (error) {\r\n      dispatch(getCommentsFailure());\r\n    }\r\n  };\r\n}\r\n","// Import library components\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n// Import local components\r\nimport { Post } from \"../components/Post\";\r\nimport { Comment } from \"../components/Comment\";\r\n\r\n// Import actions\r\nimport { fetchPost } from \"../actions/postActions\";\r\nimport { fetchComments } from \"../actions/commentsActions\";\r\n\r\nconst PostPage = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n\r\n    dispatch(fetchPost(id));\r\n    dispatch(fetchComments(id));\r\n  }, [dispatch, match]);\r\n\r\n  let count = 0;\r\n  const { post, comments, loading, hasErrors } = useSelector(\r\n    ({ post, comments }) => ({\r\n      post: post.post,\r\n      comments: comments.comments,\r\n      loading: {\r\n        post: post.loading,\r\n        comments: comments.loading,\r\n      },\r\n      hasErrors: {\r\n        post: post.hasErrors,\r\n        comments: comments.hasErrors,\r\n      },\r\n    })\r\n  );\r\n\r\n  const renderPost = () => {\r\n    console.log(\"rendering count\", count);\r\n    count++;\r\n    if (post) {\r\n      if (loading.post) return <p>Loading posts...</p>;\r\n      if (hasErrors.post) return <p>Unable to display posts.</p>;\r\n      return (\r\n        post && <Post key={post.id} fullPage post={post} varient=\"secondary\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderComments = () => {\r\n    if (comments.length) {\r\n      if (loading.comments) return <p>Loading posts...</p>;\r\n      if (hasErrors.comments) return <p>Unable to display posts.</p>;\r\n      return comments.map(comment => (\r\n        <Comment key={comment.id} fullPage comment={comment} />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-white\">\r\n      {renderPost()}\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"ps-3\">Comments</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderComments()}</Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n    <Container>\r\n      <Navbar.Brand>Fake Blog</Navbar.Brand>\r\n      <Nav className=\"me-auto\">\r\n        <Link to=\"/\" as=\"\">\r\n          Home\r\n        </Link>\r\n      </Nav>\r\n    </Container>\r\n  </Navbar>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport UsersPage from \"./pages/UsersPage\";\r\nimport PostsPage from \"./pages/PostsPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\n\r\nimport Header from \"components/header/Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={UsersPage} />\r\n        <Route exact path=\"/bloggers/:id/posts\" component={PostsPage} />\r\n        <Route exact path=\"/posts/:id\" component={PostPage} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as actions from \"../actions/postsActions\";\r\n\r\nexport const initialState = {\r\n  posts: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function postsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POSTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POSTS_SUCCESS:\r\n      return { ...state, posts: action.payload, loading: false };\r\n    case actions.GET_POSTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/postActions\";\r\n\r\nexport const initialState = {\r\n  post: undefined,\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POST:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POST_SUCCESS:\r\n      return { ...state, post: action.payload, loading: false };\r\n    case actions.GET_POST_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/commentsActions\";\r\n\r\nexport const initialState = {\r\n  comments: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function commentsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_COMMENTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_COMMENTS_SUCCESS:\r\n      return { ...state, comments: action.payload, loading: false };\r\n    case actions.GET_COMMENTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/usersActions\";\r\n\r\nexport const initialState = {\r\n  users: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_USERS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false };\r\n    case actions.GET_USERS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/userActions\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_USER:\r\n      return { ...state, loading: true };\r\n    case actions.GET_USER_SUCCESS:\r\n      return { ...state, user: action.payload, loading: false };\r\n    case actions.GET_USER_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport postReducer from \"./postReducer\";\r\nimport commentsReducer from \"./commentsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  post: postReducer,\r\n  comments: commentsReducer,\r\n  users: usersReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//Local imports\r\nimport App from \"./App\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n//Assets\r\nimport \"./index.css\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}