{"version":3,"sources":["actions/usersActions.js","resources/profile-pics/profile1.jpg","resources/profile-pics/profile2.jpeg","resources/profile-pics/profile3.jpeg","resources/profile-pics/profile4.jpeg","resources/profile-pics/profile5.jpeg","resources/profile-pics/profile6.jpeg","tools/userProfileImages.js","resources/profile-pics/profile7.jpeg","resources/profile-pics/profile8.jpeg","resources/profile-pics/profile9.jpeg","resources/profile-pics/profile10.jpeg","resources/profile-pics/profile11.jpeg","components/User.js","pages/UsersPage.js","actions/postsActions.js","actions/userActions.js","resources/cover1.webp","resources/cover2.png","resources/cover3.jpg","resources/cover4.jpg","resources/writer2.png","tools/userCovers.js","resources/cover5.jpg","tools/capitalize.js","components/Post.js","pages/PostsPage.js","components/Comment.js","components/navigate/Navigate.js","components/navigateContent/NavigateContent.js","actions/postActions.js","actions/commentsActions.js","pages/PostPage.js","components/header/Header.js","App.js","reducers/postsReducer.js","reducers/postReducer.js","reducers/commentsReducer.js","reducers/usersReducer.js","reducers/userReducer.js","reducers/index.js","index.js"],"names":["GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsersSuccess","users","type","payload","profilePics","profile1","profile2","profile3","profile4","profile5","profile6","profilePicsNumber","length","User","user","profilePicture","id","Card","className","Img","variant","src","Body","Title","name","username","Text","website","email","address","city","UsersPage","dispatch","useDispatch","useEffect","a","fetch","response","json","useSelector","loading","hasErrors","Container","Row","Spinner","animation","map","index","Col","xs","sm","lg","xl","to","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","getUserSuccess","coverPictures","cover1","cover2","cover3","cover4","cover7","coverPicturesNumber","capitalise","text","split","word","toUpperCase","concat","slice","toLocaleLowerCase","join","Post","post","fullPage","varient","coverPicture","bg","title","body","substring","PostsPage","match","bloggerId","useParams","userId","data","fetchUser","posts","Object","keys","Comment","comment","OverlayTrigger","placement","overlay","Tooltip","Navigate","left","link","direction","Button","NavigateContent","leftLink","rightLink","GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","getPostSuccess","GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","getCommentsSuccess","comments","PostPage","postId","postIdNum","Number","fetchPost","fetchComments","isPostExist","isPrevious","renderPost","renderComments","Header","Navbar","fixed","Brand","Nav","as","App","exact","path","component","initialState","undefined","rootReducer","combineReducers","state","action","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.691c0cf7.chunk.js","sourcesContent":["// Define Redux action types\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getUsers = () => ({\r\n  type: GET_USERS,\r\n});\r\n\r\nexport const getUsersSuccess = users => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nexport const getUsersfailure = () => ({\r\n  type: GET_USERS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchUsers() {\r\n  return async dispatch => {\r\n    dispatch(getUsers());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      const users = await response.json();\r\n      dispatch(getUsersSuccess(users));\r\n    } catch (error) {\r\n      dispatch(getUsersfailure());\r\n    }\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/profile1.282b1adb.jpg\";","export default __webpack_public_path__ + \"static/media/profile2.0cc52bbd.jpeg\";","export default __webpack_public_path__ + \"static/media/profile3.5faee1aa.jpeg\";","export default __webpack_public_path__ + \"static/media/profile4.4fe4fb19.jpeg\";","export default __webpack_public_path__ + \"static/media/profile5.453c4718.jpeg\";","export default __webpack_public_path__ + \"static/media/profile6.f630c76e.jpeg\";","import profile1 from \"resources/profile-pics/profile1.jpg\";\r\nimport profile2 from \"resources/profile-pics/profile2.jpeg\";\r\nimport profile3 from \"resources/profile-pics/profile3.jpeg\";\r\nimport profile4 from \"resources/profile-pics/profile4.jpeg\";\r\nimport profile5 from \"resources/profile-pics/profile5.jpeg\";\r\nimport profile6 from \"resources/profile-pics/profile6.jpeg\";\r\nimport profile7 from \"resources/profile-pics/profile7.jpeg\";\r\nimport profile8 from \"resources/profile-pics/profile8.jpeg\";\r\nimport profile9 from \"resources/profile-pics/profile9.jpeg\";\r\nimport profile10 from \"resources/profile-pics/profile10.jpeg\";\r\nimport profile11 from \"resources/profile-pics/profile11.jpeg\";\r\n\r\nconst profilePics = [\r\n  profile1,\r\n  profile2,\r\n  profile3,\r\n  profile4,\r\n  profile5,\r\n  profile6,\r\n  profile6,\r\n  profile7,\r\n  profile8,\r\n  profile9,\r\n  profile10,\r\n  profile11,\r\n];\r\n\r\nexport default profilePics;\r\n\r\nexport const profilePicsNumber = profilePics.length;\r\n","export default __webpack_public_path__ + \"static/media/profile7.fbc3e530.jpeg\";","export default __webpack_public_path__ + \"static/media/profile8.4f9e4a3e.jpeg\";","export default __webpack_public_path__ + \"static/media/profile9.a7eb2d89.jpeg\";","export default __webpack_public_path__ + \"static/media/profile10.7add4d9d.jpeg\";","export default __webpack_public_path__ + \"static/media/profile11.9e06ddf0.jpeg\";","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport profilePics, { profilePicsNumber } from \"tools/userProfileImages\";\r\n\r\nconst User = ({ user }) => {\r\n  const profilePicture = profilePics[(user.id - 1) % profilePicsNumber];\r\n  return (\r\n    <Card className=\"user-card rounded-3 shadow p-2\">\r\n      <div className=\"d-flex justify-content-center align-items-center position-relative mb-5\">\r\n        <div className=\"profile-image-wrapper p-2 rounded-circle position-absolute top-100 start-50 translate-middle shadow-lg bg-white d-flex justify-content-center align-items-center\">\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={profilePicture}\r\n            className=\"rounded-circle profile-image shadow-lg\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <Card.Body className=\"text-white text-center\">\r\n        <Card.Title className=\"\">\r\n          {user.name} | {user.username}\r\n        </Card.Title>\r\n        <Card.Text>\r\n          <i className=\"bi bi-globe2\"></i> {user.website}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <i className=\"bi bi-envelope-fill\"></i> {user.email}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <i className=\"bi bi-house-fill\"></i> {user.address.city}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Container, Spinner } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport { fetchUsers } from \"../actions/usersActions\";\r\nimport User from \"../components/User\";\r\n\r\nconst UsersPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const { users, loading, hasErrors } = useSelector(({ users }) => ({\r\n    users: users.users,\r\n    loading: users.loading,\r\n    hasErrors: users.hasErrors,\r\n  }));\r\n\r\n  const renderUsers = () => {\r\n    if (loading) return <Spinner animation=\"grow\" variant=\"warning\" />;\r\n    if (hasErrors) return <p>Unable to display users.</p>;\r\n\r\n    return (\r\n      users &&\r\n      users.map((user, index) => {\r\n        return (\r\n          <Col xs={12} sm={6} lg={4} xl={3} className=\"mb-2\" key={user.id}>\r\n            <Link to={`/blogger/${user.id}/posts`}>\r\n              <User user={user} />\r\n            </Link>\r\n          </Col>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mb-2\">{renderUsers()}</Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","// Define Redux action types\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\r\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nexport const getPostsSuccess = posts => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const getPostsfailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchPosts(userId) {\r\n  return async dispatch => {\r\n    dispatch(getPosts());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts?userId=\" + userId\r\n      );\r\n      const data = await response.json();\r\n      dispatch(getPostsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getPostsfailure());\r\n    }\r\n  };\r\n}\r\n","// Define Redux action types\r\nexport const GET_USER = \"GET_USER\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAILURE = \"GET_USER_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getUser = () => ({\r\n  type: GET_USER,\r\n});\r\n\r\nexport const getUserSuccess = user => ({\r\n  type: GET_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const getUserfailure = () => ({\r\n  type: GET_USER_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchUser(userId) {\r\n  return async dispatch => {\r\n    dispatch(getUser());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users/\" + userId\r\n      );\r\n      const user = await response.json();\r\n      dispatch(getUserSuccess(user));\r\n    } catch (error) {\r\n      dispatch(getUserfailure());\r\n    }\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cover1.ff3c9b79.webp\";","export default __webpack_public_path__ + \"static/media/cover2.21658be9.png\";","export default __webpack_public_path__ + \"static/media/cover3.f61ec2eb.jpg\";","export default __webpack_public_path__ + \"static/media/cover4.eb777506.jpg\";","export default __webpack_public_path__ + \"static/media/writer2.834bad45.png\";","import cover1 from \"resources/cover1.webp\";\r\nimport cover2 from \"resources/cover2.png\";\r\n\r\nimport cover3 from \"resources/cover3.jpg\";\r\n\r\nimport cover4 from \"resources/cover4.jpg\";\r\nimport cover7 from \"resources/writer2.png\";\r\n\r\nimport cover5 from \"resources/cover5.jpg\";\r\n\r\nconst coverPictures = [cover1, cover2, cover3, cover4, cover5, cover7];\r\n\r\nexport default coverPictures;\r\n\r\nexport const coverPicturesNumber = coverPictures.length;\r\n","export default __webpack_public_path__ + \"static/media/cover5.55ec56d9.jpg\";","// Make each word's first letter of a sentence Capital\r\n// ex. \"word power made easy\" --> \"Word Power Made Easy\"; \"WORD POWER\" --> \"Word Power\"\r\nexport function capitalise(text) {\r\n  return text\r\n    .split(\" \")\r\n    .map(word =>\r\n      word[0]\r\n        .toUpperCase()\r\n        .concat(word.slice(1, word.length).toLocaleLowerCase())\r\n    )\r\n    .join(\" \");\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport coverPictures, { coverPicturesNumber } from \"tools/userCovers\";\r\nimport { capitalise } from \"tools/capitalize\";\r\n\r\nexport const Post = ({ post, fullPage, varient, index }) => {\r\n  const coverPicture = coverPictures[index % coverPicturesNumber];\r\n\r\n  return (\r\n    <article className={fullPage ? \"post-container\" : \"post-excerpt\"}>\r\n      <Card bg=\"secondary\" text=\"white\" className=\"mb-3\" varient={varient}>\r\n        {index !== null && (\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={coverPicture}\r\n            className=\"shadow-lg m-2\"\r\n          />\r\n        )}\r\n        <Card.Body>\r\n          <Card.Title>{capitalise(post.title)}</Card.Title>\r\n          <Card.Text>\r\n            {fullPage ? post.body : post.body.substring(0, 80).concat(\"...\")}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </article>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport { fetchPosts } from \"../actions/postsActions\";\r\nimport { fetchUser } from \"actions/userActions\";\r\nimport { Post } from \"../components/Post\";\r\nimport User from \"../components/User\";\r\n\r\nconst PostsPage = ({ match }) => {\r\n  const { bloggerId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // const { id } = match.params;\r\n    dispatch(fetchPosts(bloggerId));\r\n    dispatch(fetchUser(bloggerId));\r\n  }, [dispatch, bloggerId]);\r\n\r\n  const { user, posts, loading, hasErrors } = useSelector(\r\n    ({ user, posts }) => ({\r\n      user: user.user,\r\n      posts: posts.posts,\r\n      loading: { posts: posts.loading, user: user.loading },\r\n      hasErrors: { posts: posts.hasErrors, user: user.hasErrors },\r\n    })\r\n  );\r\n\r\n  // Show loading, error, or success state\r\n  const renderPosts = () => {\r\n    if (loading.posts) return <Spinner animation=\"grow\" variant=\"warning\" />;\r\n    if (hasErrors.posts) return <p>Unable to display posts.</p>;\r\n    return (\r\n      posts &&\r\n      posts.map((post, index) => {\r\n        return (\r\n          <Col xs={12} sm={6} lg={4} key={post.id}>\r\n            <Link to={`/blogger/${bloggerId}/posts/${post.id}`}>\r\n              <Post\r\n                post={post}\r\n                fullPage={false}\r\n                index={index}\r\n                varient=\"secondary\"\r\n              />\r\n            </Link>\r\n          </Col>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderUser = () => {\r\n    if (loading.user)\r\n      return (\r\n        <Spinner animation=\"grow\" variant=\"warning\" className=\"text-center\" />\r\n      );\r\n    if (hasErrors.user) return <p>Unable to display posts.</p>;\r\n\r\n    return (\r\n      Object.keys(user).length && (\r\n        <User user={user} className=\"position-fixed\" />\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-white\">\r\n      <Row>\r\n        <Col xs={12} lg={3} xl={4} className=\"mb-5 posts-by\">\r\n          <h1 className=\"d-block d-lg-none\">Posts by {user.username}</h1>\r\n          <div className=\"post-by-wrapper text-center position-fixed d-none d-lg-block pt-5 mt-5\">\r\n            <h1>Posts by</h1>\r\n            {renderUser()}\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} lg={9} xl={8} className=\"offset-lg-4\">\r\n          <Row>{renderPosts()}</Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostsPage;\r\n","import React from \"react\";\r\nimport { Card, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\n//Local imports\r\nimport { capitalise } from \"tools/capitalize\";\r\nimport profilePics, { profilePicsNumber } from \"tools/userProfileImages\";\r\n\r\nexport const Comment = ({ comment, index }) => {\r\n  const profilePicture = profilePics[(index % profilePicsNumber) + 1];\r\n  return (\r\n    <aside className=\"comment-wrapper p-2 ms-5 mb-2 rounded-3\">\r\n      <Card bg=\"dark\" className=\"text-white\">\r\n        <OverlayTrigger\r\n          key=\"test\"\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip id={`tooltip-test-${index}`}>\r\n              <h6 className=\"mt-2 text-left\">\r\n                {capitalise(comment.name.toUpperCase())}\r\n              </h6>\r\n              <hr />\r\n              <p>{comment.email}</p>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div className=\"comment-image-wrapper rounded-circle position-absolute top-0 start-0 bg-white d-flex justify-content-center align-items-center\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={profilePicture}\r\n              className=\"rounded-circle comment-image shadow-lg\"\r\n            />\r\n          </div>\r\n        </OverlayTrigger>\r\n        <Card.Body>\r\n          <Card.Text>{comment.email}</Card.Text>\r\n          <Card.Text>{comment.body}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </aside>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigate = ({ left, link }) => {\r\n  const direction = left ? \"left\" : \"right\";\r\n\r\n  return (\r\n    <Link to={link}>\r\n      <Button variant=\"dark\">\r\n        <i className={`bi bi-arrow-${direction}-circle`}></i>\r\n      </Button>\r\n    </Link>\r\n  ); \r\n};\r\n\r\nexport default Navigate;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport Navigate from \"components/navigate/Navigate\";\r\n\r\nconst NavigateContent = ({ leftLink, rightLink }) => {\r\n  return (\r\n    <Row>\r\n      <Col>{leftLink && <Navigate left link={leftLink} />}</Col>\r\n      <Col className=\"d-flex justify-content-end\">\r\n        {rightLink && <Navigate link={rightLink} />}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default NavigateContent;\r\n","// Define Redux action types\r\nexport const GET_POST = \"GET_POST\";\r\nexport const GET_POST_SUCCESS = \"GET_POST_SUCCESS\";\r\nexport const GET_POST_FAILURE = \"GET_POST_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getPost = () => ({\r\n  type: GET_POST,\r\n});\r\n\r\nexport const getPostSuccess = post => ({\r\n  type: GET_POST_SUCCESS,\r\n  payload: post,\r\n});\r\n\r\nexport const getPostfailure = () => ({\r\n  type: GET_POST_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchPost(postId) {\r\n  return async dispatch => {\r\n    dispatch(getPost());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts/\" + postId\r\n      );\r\n      const post = await response.json();\r\n\r\n      dispatch(getPostSuccess(post));\r\n    } catch (error) {\r\n      dispatch(getPostfailure());\r\n    }\r\n  };\r\n}\r\n","// Define Redux action types\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const GET_COMMENTS_SUCCESS = \"GET_COMMENTS_SUCCESS\";\r\nexport const GET_COMMENTS_FAILURE = \"GET_COMMENTS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getComments = () => ({\r\n  type: GET_COMMENTS,\r\n});\r\n\r\nexport const getCommentsSuccess = comments => ({\r\n  type: GET_COMMENTS_SUCCESS,\r\n  payload: comments,\r\n});\r\n\r\nexport const getCommentsFailure = () => ({\r\n  type: GET_COMMENTS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchComments(postId) {\r\n  return async dispatch => {\r\n    dispatch(getComments());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments?postId=\" + postId\r\n      );\r\n      const comments = await response.json();\r\n\r\n      dispatch(getCommentsSuccess(comments));\r\n    } catch (error) {\r\n      dispatch(getCommentsFailure());\r\n    }\r\n  };\r\n}\r\n","// Import library components\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Import local components\r\nimport { Post } from \"../components/Post\";\r\nimport { Comment } from \"../components/Comment\";\r\nimport NavigateContent from \"components/navigateContent/NavigateContent\";\r\n\r\n// Import actions\r\nimport { fetchPost } from \"../actions/postActions\";\r\nimport { fetchComments } from \"../actions/commentsActions\";\r\n\r\nconst PostPage = () => {\r\n  const { bloggerId, postId } = useParams();\r\n  const postIdNum = Number(postId);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchPost(postIdNum));\r\n    dispatch(fetchComments(postIdNum));\r\n  }, [dispatch, postIdNum]);\r\n\r\n  const { post, comments, loading, hasErrors } = useSelector(\r\n    ({ post, comments }) => ({\r\n      post: post.post,\r\n      comments: comments.comments,\r\n      loading: {\r\n        post: post.loading,\r\n        comments: comments.loading,\r\n      },\r\n      hasErrors: {\r\n        post: post.hasErrors,\r\n        comments: comments.hasErrors,\r\n      },\r\n    })\r\n  );\r\n\r\n  const renderPost = () => {\r\n    if (post) {\r\n      if (loading.post) return <Spinner animation=\"grow\" variant=\"warning\" />;\r\n      if (hasErrors.post) return <p>Unable to display posts.</p>;\r\n      return (\r\n        post && (\r\n          <>\r\n            <Post\r\n              key={post.id}\r\n              fullPage\r\n              post={post}\r\n              varient=\"secondary\"\r\n              index={null}\r\n            />\r\n            <NavigateContent\r\n              leftLink={\r\n                isPostExist(true)\r\n                  ? `/blogger/${bloggerId}/posts/${postIdNum - 1}`\r\n                  : null\r\n              }\r\n              rightLink={\r\n                isPostExist()\r\n                  ? `/blogger/${bloggerId}/posts/${postIdNum + 1}`\r\n                  : null\r\n              }\r\n            />\r\n          </>\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderComments = () => {\r\n    if (comments.length) {\r\n      if (loading.comments)\r\n        return <Spinner animation=\"grow\" variant=\"warning\" />;\r\n      if (hasErrors.comments) return <p>Unable to display posts.</p>;\r\n      return comments.map((comment, index) => (\r\n        <Comment key={comment.id} fullPage comment={comment} index={index} />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const isPostExist = (isPrevious = false) =>\r\n    isPrevious\r\n      ? postIdNum - 1 > (bloggerId - 1) * 10\r\n      : postIdNum + 1 <= bloggerId * 10;\r\n\r\n  return (\r\n    <Container className=\"text-white\">\r\n      {renderPost()}\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"ps-2\">Comments</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderComments()}</Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n    <Container>\r\n      <Navbar.Brand>Fake Blog</Navbar.Brand>\r\n      <Nav className=\"me-auto\">\r\n        <Link to=\"/\" as=\"\">\r\n          Home\r\n        </Link>\r\n      </Nav>\r\n    </Container>\r\n  </Navbar>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport UsersPage from \"./pages/UsersPage\";\r\nimport PostsPage from \"./pages/PostsPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\n\r\nimport Header from \"components/header/Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={UsersPage} />\r\n        <Route exact path=\"/blogger/:bloggerId/posts\" component={PostsPage} />\r\n        <Route\r\n          exact\r\n          path=\"/blogger/:bloggerId/posts/:postId\"\r\n          component={PostPage}\r\n        />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as actions from \"../actions/postsActions\";\r\n\r\nexport const initialState = {\r\n  posts: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function postsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POSTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POSTS_SUCCESS:\r\n      return { ...state, posts: action.payload, loading: false };\r\n    case actions.GET_POSTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/postActions\";\r\n\r\nexport const initialState = {\r\n  post: undefined,\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POST:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POST_SUCCESS:\r\n      return { ...state, post: action.payload, loading: false };\r\n    case actions.GET_POST_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/commentsActions\";\r\n\r\nexport const initialState = {\r\n  comments: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function commentsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_COMMENTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_COMMENTS_SUCCESS:\r\n      return { ...state, comments: action.payload, loading: false };\r\n    case actions.GET_COMMENTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/usersActions\";\r\n\r\nexport const initialState = {\r\n  users: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_USERS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false };\r\n    case actions.GET_USERS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/userActions\";\r\n\r\nexport const initialState = {\r\n  user: {},\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_USER:\r\n      return { ...state, loading: true };\r\n    case actions.GET_USER_SUCCESS:\r\n      return { ...state, user: action.payload, loading: false };\r\n    case actions.GET_USER_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport postReducer from \"./postReducer\";\r\nimport commentsReducer from \"./commentsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  post: postReducer,\r\n  comments: commentsReducer,\r\n  users: usersReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//Local imports\r\nimport App from \"./App\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n//Assets\r\nimport \"./index.css\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}