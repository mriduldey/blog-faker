{"version":3,"sources":["actions/usersActions.js","resources/profile-pics/profile1.jpg","resources/profile-pics/profile2.jpeg","resources/profile-pics/profile3.jpeg","resources/profile-pics/profile4.jpeg","resources/profile-pics/profile5.jpeg","resources/profile-pics/profile6.jpeg","tools/userProfileImages.js","resources/profile-pics/profile7.jpeg","resources/profile-pics/profile8.jpeg","resources/profile-pics/profile9.jpeg","resources/profile-pics/profile10.jpeg","resources/profile-pics/profile11.jpeg","components/User.js","pages/UsersPage.js","actions/postsActions.js","resources/cover1.webp","resources/cover2.png","resources/cover3.jpg","resources/cover4.jpg","resources/writer2.png","tools/userCovers.js","resources/cover5.jpg","components/Post.js","tools/themes.js","pages/PostsPage.js","tools/randomIntNumber.js","components/Comment.js","actions/postActions.js","actions/commentsActions.js","pages/PostPage.js","App.js","reducers/postsReducer.js","reducers/postReducer.js","reducers/commentsReducer.js","reducers/usersReducer.js","reducers/index.js","index.js"],"names":["GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsersSuccess","users","type","payload","profilePics","profile1","profile2","profile3","profile4","profile5","profile6","profilePicsNumber","length","User","user","index","profilePicture","Card","className","Img","variant","src","Body","Title","name","username","Text","website","email","address","city","connect","loading","hasError","dispatch","hasErrors","useEffect","a","fetch","response","json","Container","Row","map","Col","xs","sm","lg","xl","to","id","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","coverPictures","cover1","cover2","cover3","cover4","cover7","coverPicturesNumber","Post","post","fullPage","varient","coverPicture","bg","toLowerCase","text","title","toUpperCase","body","substring","concat","themes","posts","match","userId","params","data","fluid","md","max","Math","floor","random","Comment","comment","Header","GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","getPostSuccess","GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","getCommentsSuccess","comments","postId","fetchComments","renderPost","renderComments","App","basename","exact","path","component","UsersPage","PostsPage","PostPage","initialState","undefined","rootReducer","combineReducers","state","action","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.b55f5198.chunk.js","sourcesContent":["// Define Redux action types\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getUsers = () => ({\r\n  type: GET_USERS,\r\n});\r\n\r\nexport const getUsersSuccess = users => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nexport const getUsersfailure = () => ({\r\n  type: GET_USERS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchUsers() {\r\n  return async dispatch => {\r\n    dispatch(getUsers());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      const users = await response.json();\r\n      dispatch(getUsersSuccess(users));\r\n    } catch (error) {\r\n      dispatch(getUsersfailure());\r\n    }\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/profile1.282b1adb.jpg\";","export default __webpack_public_path__ + \"static/media/profile2.0cc52bbd.jpeg\";","export default __webpack_public_path__ + \"static/media/profile3.5faee1aa.jpeg\";","export default __webpack_public_path__ + \"static/media/profile4.4fe4fb19.jpeg\";","export default __webpack_public_path__ + \"static/media/profile5.453c4718.jpeg\";","export default __webpack_public_path__ + \"static/media/profile6.f630c76e.jpeg\";","import profile1 from \"resources/profile-pics/profile1.jpg\";\r\nimport profile2 from \"resources/profile-pics/profile2.jpeg\";\r\nimport profile3 from \"resources/profile-pics/profile3.jpeg\";\r\nimport profile4 from \"resources/profile-pics/profile4.jpeg\";\r\nimport profile5 from \"resources/profile-pics/profile5.jpeg\";\r\nimport profile6 from \"resources/profile-pics/profile6.jpeg\";\r\nimport profile7 from \"resources/profile-pics/profile7.jpeg\";\r\nimport profile8 from \"resources/profile-pics/profile8.jpeg\";\r\nimport profile9 from \"resources/profile-pics/profile9.jpeg\";\r\nimport profile10 from \"resources/profile-pics/profile10.jpeg\";\r\nimport profile11 from \"resources/profile-pics/profile11.jpeg\";\r\n\r\nconst profilePics = [\r\n  profile1,\r\n  profile2,\r\n  profile3,\r\n  profile4,\r\n  profile5,\r\n  profile6,\r\n  profile6,\r\n  profile7,\r\n  profile8,\r\n  profile9,\r\n  profile10,\r\n  profile11,\r\n];\r\n\r\nexport default profilePics;\r\n\r\nexport const profilePicsNumber = profilePics.length;\r\n","export default __webpack_public_path__ + \"static/media/profile7.fbc3e530.jpeg\";","export default __webpack_public_path__ + \"static/media/profile8.4f9e4a3e.jpeg\";","export default __webpack_public_path__ + \"static/media/profile9.a7eb2d89.jpeg\";","export default __webpack_public_path__ + \"static/media/profile10.7add4d9d.jpeg\";","export default __webpack_public_path__ + \"static/media/profile11.9e06ddf0.jpeg\";","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport profilePics, { profilePicsNumber } from \"tools/userProfileImages\";\r\n\r\nconst User = ({ user, index }) => {\r\n  const profilePicture = profilePics[index % profilePicsNumber];\r\n\r\n  return (\r\n    <Card className=\"user-card rounded-3 shadow p-2\">\r\n      <div className=\"d-flex justify-content-center align-items-center position-relative mb-5\">\r\n        <div className=\"profile-image-wrapper p-2 rounded-circle position-absolute top-100 start-50 translate-middle shadow-lg bg-white d-flex justify-content-center align-items-center\">\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={profilePicture}\r\n            className=\"rounded-circle profile-image shadow-lg\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <Card.Body className=\"text-white text-center\">\r\n        <Card.Title className=\"\">\r\n          {user.name} | {user.username}\r\n        </Card.Title>\r\n        <Card.Text>Website: {user.website}</Card.Text>\r\n        <Card.Text>Email: {user.email}</Card.Text>\r\n        <Card.Text>City: {user.address.city}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport { fetchUsers } from \"../actions/usersActions\";\r\nimport User from \"../components/User\";\r\n\r\nconst UsersPage = ({ dispatch, users, loading, hasErrors }) => {\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const renderUsers = () => {\r\n    if (loading) return <p>Loading users...</p>;\r\n    if (hasErrors) return <p>Unable to display users.</p>;\r\n\r\n    return users.map((user, index) => {\r\n      return (\r\n        <Col xs={12} sm={6} lg={4} xl={3} className=\"mb-2\" key={user.id}>\r\n          <Link to={`/bloggers/${user.id}/posts`} className=\"button\">\r\n            <User user={user} index={index} />\r\n          </Link>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mb-2\">{renderUsers()}</Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ users }) => ({\r\n  loading: users.loading,\r\n  hasError: users.hasError,\r\n  users: users.users,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UsersPage);\r\n","// Define Redux action types\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\r\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nexport const getPostsSuccess = posts => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const getPostsfailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchPosts(userId) {\r\n  return async dispatch => {\r\n    dispatch(getPosts());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts?userId=\" + userId\r\n      );\r\n      const data = await response.json();\r\n      dispatch(getPostsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getPostsfailure());\r\n    }\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cover1.ff3c9b79.webp\";","export default __webpack_public_path__ + \"static/media/cover2.21658be9.png\";","export default __webpack_public_path__ + \"static/media/cover3.f61ec2eb.jpg\";","export default __webpack_public_path__ + \"static/media/cover4.eb777506.jpg\";","export default __webpack_public_path__ + \"static/media/writer2.834bad45.png\";","import cover1 from \"resources/cover1.webp\";\r\nimport cover2 from \"resources/cover2.png\";\r\n\r\nimport cover3 from \"resources/cover3.jpg\";\r\n\r\nimport cover4 from \"resources/cover4.jpg\";\r\nimport cover7 from \"resources/writer2.png\";\r\n\r\nimport cover5 from \"resources/cover5.jpg\";\r\n\r\nconst coverPictures = [cover1, cover2, cover3, cover4, cover5, cover7];\r\n\r\nexport default coverPictures;\r\n\r\nexport const coverPicturesNumber = coverPictures.length;\r\n","export default __webpack_public_path__ + \"static/media/cover5.55ec56d9.jpg\";","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport coverPictures, { coverPicturesNumber } from \"tools/userCovers\";\r\nexport const Post = ({ post, fullPage, varient, index }) => {\r\n  const coverPicture = coverPictures[index % coverPicturesNumber];\r\n\r\n  return (\r\n    <article className={fullPage ? \"post-container\" : \"post-excerpt\"}>\r\n      <Card\r\n        bg={varient.toLowerCase()}\r\n        text={varient.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n        className=\"mb-3\"\r\n      >\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={coverPicture}\r\n          className=\"shadow-lg m-2\"\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{post.title.toUpperCase()}</Card.Title>\r\n          <Card.Text>\r\n            {fullPage ? post.body : post.body.substring(0, 100).concat(\"...\")}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </article>\r\n  );\r\n};\r\n","const themes = [\r\n  \"Primary\",\r\n  \"Secondary\",\r\n  \"Success\",\r\n  \"Danger\",\r\n  \"Warning\",\r\n  \"Info\",\r\n  \"Light\",\r\n  \"Dark\",\r\n];\r\n\r\nexport default themes;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n// Local imports\r\nimport { fetchPosts } from \"../actions/postsActions\";\r\nimport { Post } from \"../components/Post\";\r\nimport themes from \"../tools/themes\";\r\nimport { getRandomInt } from \"../tools/randomIntNumber\";\r\n\r\nconst PostsPage = ({ match, dispatch, posts, loading, hasErrors }) => {\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n\r\n    dispatch(fetchPosts(id));\r\n  }, [dispatch, match.params]);\r\n\r\n  // Show loading, error, or success state\r\n  const renderPosts = () => {\r\n    if (loading) return <p>Loading posts...</p>;\r\n    if (hasErrors) return <p>Unable to display posts.</p>;\r\n    return posts.map((post, index) => {\r\n      // Randomly choose a varient from themes\r\n      const varient = themes[getRandomInt(themes.length)];\r\n      return (\r\n        <Col xs={12} sm={6} lg={4} xl={3} key={post.id}>\r\n          <Link to={`/posts/${post.id}`}>\r\n            <Post post={post} fullPage={false} varient={varient} index={index} />\r\n          </Link>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"md\" className=\"text-white\">\r\n      <h1>Posts</h1>\r\n      <Row md={6}>{renderPosts()}</Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Map Redux state to component props | note: \"posts\" destructured from \"state\"\r\nconst mapStateToProps = ({ posts }) => ({\r\n  loading: posts.loading,\r\n  hasError: posts.hasError,\r\n  posts: posts.posts,\r\n});\r\n\r\n// Connect Redux to React\r\nexport default connect(mapStateToProps)(PostsPage);\r\n","export function getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport const Comment = ({ comment }) => (\r\n  <aside className=\"comment-wrapper p-2 ms-5 mb-2 bg-secondary rounded-3\">\r\n    <Card\r\n      bg={\"dark\".toLowerCase()}\r\n      text={\"dark\".toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n    >\r\n      <Card.Header>\r\n        <h2>{comment.name.toUpperCase()}</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{comment.email}</Card.Title>\r\n        <Card.Text>{comment.body}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  </aside>\r\n);\r\n","// Define Redux action types\r\nexport const GET_POST = \"GET_POST\";\r\nexport const GET_POST_SUCCESS = \"GET_POST_SUCCESS\";\r\nexport const GET_POST_FAILURE = \"GET_POST_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getPost = () => ({\r\n  type: GET_POST,\r\n});\r\n\r\nexport const getPostSuccess = post => ({\r\n  type: GET_POST_SUCCESS,\r\n  payload: post,\r\n});\r\n\r\nexport const getPostfailure = () => ({\r\n  type: GET_POST_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchPost(postId) {\r\n  return async dispatch => {\r\n    dispatch(getPost());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts/\" + postId\r\n      );\r\n      const post = await response.json();\r\n\r\n      dispatch(getPostSuccess(post));\r\n    } catch (error) {\r\n      dispatch(getPostfailure());\r\n    }\r\n  };\r\n}\r\n","// Define Redux action types\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const GET_COMMENTS_SUCCESS = \"GET_COMMENTS_SUCCESS\";\r\nexport const GET_COMMENTS_FAILURE = \"GET_COMMENTS_FAILURE\";\r\n\r\n// Create redux action creators that return an action\r\nexport const getComments = () => ({\r\n  type: GET_COMMENTS,\r\n});\r\n\r\nexport const getCommentsSuccess = comments => ({\r\n  type: GET_COMMENTS_SUCCESS,\r\n  payload: comments,\r\n});\r\n\r\nexport const getCommentsFailure = () => ({\r\n  type: GET_COMMENTS_FAILURE,\r\n});\r\n\r\n// Combine them all in a asynchronous thunk\r\nexport function fetchComments(postId) {\r\n  return async dispatch => {\r\n    dispatch(getComments());\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments?postId=\" + postId\r\n      );\r\n      const comments = await response.json();\r\n\r\n      dispatch(getCommentsSuccess(comments));\r\n    } catch (error) {\r\n      dispatch(getCommentsFailure());\r\n    }\r\n  };\r\n}\r\n","// Import library components\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n// Import local components\r\nimport { Post } from \"../components/Post\";\r\nimport { Comment } from \"../components/Comment\";\r\n\r\n// Import actions\r\nimport { fetchPost } from \"../actions/postActions\";\r\nimport { fetchComments } from \"../actions/commentsActions\";\r\n\r\nconst PostPage = ({\r\n  dispatch,\r\n  match,\r\n  post,\r\n  comments,\r\n  loading = {},\r\n  hasErrors = {},\r\n}) => {\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n\r\n    dispatch(fetchPost(id));\r\n    dispatch(fetchComments(id));\r\n  }, [dispatch, match]);\r\n\r\n  const renderPost = () => {\r\n    if (post) {\r\n      if (loading.post) return <p>Loading posts...</p>;\r\n      if (hasErrors.post) return <p>Unable to display posts.</p>;\r\n      return (\r\n        post && <Post key={post.id} fullPage post={post} varient=\"Light\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderComments = () => {\r\n    if (comments.length) {\r\n      if (loading.comments) return <p>Loading posts...</p>;\r\n      if (hasErrors.comments) return <p>Unable to display posts.</p>;\r\n      return comments.map(comment => (\r\n        <Comment key={comment.id} fullPage comment={comment} />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-white\">\r\n      <h1>Post</h1>\r\n      {renderPost()}\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"ps-3\">Comments</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderComments()}</Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Map Redux state to component props | note: \"posts\" destructured from \"state\"\r\nconst mapStateToProps = ({ post, comments }) => ({\r\n  loading: { post: post.loading, comments: comments.loading },\r\n  hasError: { post: post.hasError, comments: comments.hasErrors },\r\n  post: post.post,\r\n  comments: comments.comments,\r\n});\r\n\r\n// Connect Redux to React\r\nexport default connect(mapStateToProps)(PostPage);\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport UsersPage from \"./pages/UsersPage\";\r\nimport PostsPage from \"./pages/PostsPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename=\"/fake-blog\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={UsersPage} />\r\n        <Route exact path=\"/bloggers/:id/posts\" component={PostsPage} />\r\n        <Route exact path=\"/posts/:id\" component={PostPage} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as actions from \"../actions/postsActions\";\r\n\r\nexport const initialState = {\r\n  posts: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function postsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POSTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POSTS_SUCCESS:\r\n      return { ...state, posts: action.payload, loading: false };\r\n    case actions.GET_POSTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/postActions\";\r\n\r\nexport const initialState = {\r\n  post: undefined,\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_POST:\r\n      return { ...state, loading: true };\r\n    case actions.GET_POST_SUCCESS:\r\n      return { ...state, post: action.payload, loading: false };\r\n    case actions.GET_POST_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/commentsActions\";\r\n\r\nexport const initialState = {\r\n  comments: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function commentsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_COMMENTS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_COMMENTS_SUCCESS:\r\n      return { ...state, comments: action.payload, loading: false };\r\n    case actions.GET_COMMENTS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/usersActions\";\r\n\r\nexport const initialState = {\r\n  users: [],\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_USERS:\r\n      return { ...state, loading: true };\r\n    case actions.GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false };\r\n    case actions.GET_USERS_FAILURE:\r\n      return { ...state, loading: false, hasErrors: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport postReducer from \"./postReducer\";\r\nimport commentsReducer from \"./commentsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  post: postReducer,\r\n  comments: commentsReducer,\r\n  users: usersReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//Local imports\r\nimport App from \"./App\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n//Assets\r\nimport \"./index.css\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}